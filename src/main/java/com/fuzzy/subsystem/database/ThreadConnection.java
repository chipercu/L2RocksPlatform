package com.fuzzy.subsystem.database;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.concurrent.locks.ReentrantLock;
import java.util.logging.Logger;

public class ThreadConnection {
    static Logger _log = Logger.getLogger(ThreadConnection.class.getName());

    private final Connection myConnection;
    private final L2DatabaseFactory myFactory;
    private int counter = 1;

    public ThreadConnection(Connection con, L2DatabaseFactory f) {
        myConnection = con;
        myFactory = f;
    }

    public Connection getConn() {
        return myConnection;
    }

    public void updateCounter() {
        counter++;
    }

    public FiltredPreparedStatement prepareStatement(String sql) throws SQLException {
        return new FiltredPreparedStatement(myConnection.prepareStatement(sql));
    }

    public FiltredPreparedStatement prepareStatement(String sql, int autoGeneratedKeys) throws SQLException {
        return new FiltredPreparedStatement(myConnection.prepareStatement(sql, autoGeneratedKeys));
    }

    public PreparedStatement prepareStatement2(String sql) throws SQLException {
        return myConnection.prepareStatement(sql);
    }

    public PreparedStatement prepareStatement2(String sql, int autoGeneratedKeys) throws SQLException {
        return myConnection.prepareStatement(sql, autoGeneratedKeys);
    }

    public void close() {
        counter--;
        if (counter == 0) {
            ReentrantLock _lock = new ReentrantLock();
            _lock.lock();
            try {
                myConnection.close();
                String key = myFactory.generateKey();
                myFactory.getConnections().remove(key);
            } catch (Exception e) {
                _log.warning("Couldn't close connection. Cause: " + e.getMessage());
            } finally {
                _lock.unlock();
            }
        }
    }

    public FiltredStatement createStatement() throws SQLException {
        return new FiltredStatement(myConnection.createStatement());
    }
}